# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install flake8 pytest
        python3 -m pip install numpy
        python3 -m pip install -r requirements.txt
        python3 -m pip install pytest-cov
    - name: Install astromatic-wrapper
      run: |
        git clone https://github.com/aidansedgewick/astromatic_wrapper.git
        cd astromatic_wrapper
        python3 -m pip install -e .
        cd ..
    - name: Install stilts
      run: |
        sudo apt-get install stilts
    - name: Install stilts-wrapper
      run:
        python3 -m pip install stilts-wrapper
    - name: Install EAZY
      run: |
        git clone --recurse-submodules https://github.com/gbrammer/eazy-py.git
        echo "export EAZYCODE=${PWD}/eazy-py/eazy-photoz" >> ~/.bashrc
        cd eazy-py
        pip install .  -r requirements.txt
        cd ..
    - name: Install dxs suite
      run: |
        python3 configuration/configure_dustmaps.py
        python3 -m pip install -e .
    #- name: Lint with flake8
    #  run: |
    #    # stop the build if there are Python syntax errors or undefined names
    #    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #    # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest --cov=dxs --cov-report=xml test_dxs


    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage/reports/
        env_vars: OS,PYTHON
        fail_ci_if_error: false
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        #path_to_write_report: ./coverage/reports/codecov_report.xml
        verbose: true
